{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport HomeScreenSimple from \"./src/screens/HomeScreenSimple\";\nimport HomeScreenWeb from \"./src/screens/HomeScreenWeb\";\nimport HistoryScreen from \"./src/screens/HistoryScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport default function App() {\n  var HomeComponent = Platform.OS === 'web' ? HomeScreenWeb : HomeScreenSimple;\n  return _jsxs(NavigationContainer, {\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsxs(Stack.Navigator, {\n      initialRouteName: \"Home\",\n      screenOptions: {\n        headerStyle: {\n          backgroundColor: '#FF6B35'\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeComponent,\n        options: {\n          title: Platform.OS === 'web' ? 'Live GPS Tracker (Web)' : 'Live GPS Tracker'\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"History\",\n        component: HistoryScreen,\n        options: {\n          title: 'Route History'\n        }\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","NavigationContainer","createStackNavigator","StatusBar","StyleSheet","Platform","HomeScreenSimple","HomeScreenWeb","HistoryScreen","jsx","_jsx","jsxs","_jsxs","Stack","App","HomeComponent","OS","children","style","Navigator","initialRouteName","screenOptions","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","Screen","name","component","options","title","styles","create","container","flex","alignItems","justifyContent"],"sources":["/Users/danielsamadi/Downloads/college/Database/RouteMate/App.js"],"sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Platform } from 'react-native';\n\nimport HomeScreenSimple from './src/screens/HomeScreenSimple';\nimport HomeScreenWeb from './src/screens/HomeScreenWeb';\nimport HistoryScreen from './src/screens/HistoryScreen';\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  // Choose the appropriate HomeScreen based on platform\n  const HomeComponent = Platform.OS === 'web' ? HomeScreenWeb : HomeScreenSimple;\n  \n  return (\n    <NavigationContainer>\n        <StatusBar style=\"auto\" />\n        <Stack.Navigator\n          initialRouteName=\"Home\"\n          screenOptions={{\n            headerStyle: {\n              backgroundColor: '#FF6B35',\n            },\n            headerTintColor: '#fff',\n            headerTitleStyle: {\n              fontWeight: 'bold',\n            },\n          }}\n        >\n          <Stack.Screen \n            name=\"Home\" \n            component={HomeComponent} \n            options={{ title: Platform.OS === 'web' ? 'Live GPS Tracker (Web)' : 'Live GPS Tracker' }}\n          />\n          <Stack.Screen \n            name=\"History\" \n            component={HistoryScreen} \n            options={{ title: 'Route History' }}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAG5C,OAAOC,gBAAgB;AACvB,OAAOC,aAAa;AACpB,OAAOC,aAAa;AAAoC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAExD,IAAMC,KAAK,GAAGX,oBAAoB,CAAC,CAAC;AAEpC,eAAe,SAASY,GAAGA,CAAA,EAAG;EAE5B,IAAMC,aAAa,GAAGV,QAAQ,CAACW,EAAE,KAAK,KAAK,GAAGT,aAAa,GAAGD,gBAAgB;EAE9E,OACEM,KAAA,CAACX,mBAAmB;IAAAgB,QAAA,GAChBP,IAAA,CAACP,SAAS;MAACe,KAAK,EAAC;IAAM,CAAE,CAAC,EAC1BN,KAAA,CAACC,KAAK,CAACM,SAAS;MACdC,gBAAgB,EAAC,MAAM;MACvBC,aAAa,EAAE;QACbC,WAAW,EAAE;UACXC,eAAe,EAAE;QACnB,CAAC;QACDC,eAAe,EAAE,MAAM;QACvBC,gBAAgB,EAAE;UAChBC,UAAU,EAAE;QACd;MACF,CAAE;MAAAT,QAAA,GAEFP,IAAA,CAACG,KAAK,CAACc,MAAM;QACXC,IAAI,EAAC,MAAM;QACXC,SAAS,EAAEd,aAAc;QACzBe,OAAO,EAAE;UAAEC,KAAK,EAAE1B,QAAQ,CAACW,EAAE,KAAK,KAAK,GAAG,wBAAwB,GAAG;QAAmB;MAAE,CAC3F,CAAC,EACFN,IAAA,CAACG,KAAK,CAACc,MAAM;QACXC,IAAI,EAAC,SAAS;QACdC,SAAS,EAAErB,aAAc;QACzBsB,OAAO,EAAE;UAAEC,KAAK,EAAE;QAAgB;MAAE,CACrC,CAAC;IAAA,CACa,CAAC;EAAA,CACC,CAAC;AAE5B;AAEA,IAAMC,MAAM,GAAG5B,UAAU,CAAC6B,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CAAC;IACPZ,eAAe,EAAE,MAAM;IACvBa,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}